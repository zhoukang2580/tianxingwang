<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<plugin xmlns="http://apache.org/cordova/ns/plugins/1.0"
  xmlns:android="http://schemas.android.com/apk/res/android"
  id="cordova-push-plugin" version="1.0.0">

  <name>Cordova Push Plugin</name>
  <description>Enable receiving push notifications on Android, iOS and Windows devices. Android uses Firebase Cloud Messaging. iOS uses Apple APNS Notifications. Windows uses Microsoft WNS Notifications.</description>

  <license>MIT</license>

  <js-module src="www/push.js" name="PushNotification">
    <clobbers target="PushNotification"/>
    <!-- <clobbers target="AndroidPushNotification"/> -->
  </js-module>

  <!-- <engines>
    <engine name="cordova" version=">=10.0.0"/>
    <engine name="cordova-android" version=">=8.0.0"/>
    <engine name="cordova-ios" version=">=6.0.0"/>
  </engines> -->

  <platform name="android">
    <hook type="after_plugin_install" src="hooks/android/addHWBuildGradle.js"/>
    <config-file target="res/xml/config.xml" parent="/*">
      <feature name="PushNotification">
        <param name="android-package" value="com.beeant.push.PushPlugin"/>
      </feature>
    </config-file>

    <config-file target="AndroidManifest.xml" parent="/manifest">
      <!-- 小米推送 start-->
      <!--这里com.xiaomi.mipushdemo改成app的包名-->
      <permission android:name="${applicationId}.permission.MIPUSH_RECEIVE" android:protectionLevel="signature" /> 
      <!--这里com.xiaomi.mipushdemo改成app的包名-->
      <uses-permission android:name="${applicationId}.permission.MIPUSH_RECEIVE" />
      <!-- 小米推送 end -->
      <!-- oppo推送 start-->
      <uses-permission android:name="com.coloros.mcs.permission.RECIEVE_MCS_MESSAGE"/>  
      <uses-permission android:name="com.heytap.mcs.permission.RECIEVE_MCS_MESSAGE"/>
      <!-- oppo推送 end -->
      <uses-permission android:name="android.permission.INTERNET"/>
      <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>
      <uses-permission android:name="android.permission.WAKE_LOCK"/>
      <uses-permission android:name="android.permission.VIBRATE"/>
       <uses-permission android:name="com.huawei.android.launcher.permission.CHANGE_BADGE" />
      <!-- “Android 11”更改了应用查询用户在设备上已安装的其他应用以及与之交互的方式。您应用的“targetSdkVersion”是30或者更高版本时，
      需要在“AndroidManifest.xml”中“manifest”内添加<queries>标签，使应用可以访问HMS Core（APK）。 -->
      <queries>
        <intent>
            <action android:name="com.huawei.hms.core.aidlservice" />
        </intent>
      </queries>
    </config-file>

    <config-file target="AndroidManifest.xml" parent="/manifest/application">
        <service android:name="com.beeant.push.CDVPluginHmsMessageService" android:exported="false">
            <intent-filter>
                <action android:name="com.huawei.push.action.MESSAGING_EVENT"/>
            </intent-filter>
        </service>
      <!-- 小米推送 start -->
        <service
            android:name="com.xiaomi.push.service.XMPushService"
            android:enabled="true"
            android:process=":pushservice" />

        <!--注：此service必须在3.0.1版本以后（包括3.0.1版本）加入-->
        <service
            android:name="com.xiaomi.push.service.XMJobService"
            android:enabled="true"
            android:exported="false"
            android:permission="android.permission.BIND_JOB_SERVICE"
            android:process=":pushservice" />

        <service
            android:name="com.xiaomi.mipush.sdk.PushMessageHandler"
            android:enabled="true"
            android:exported="true" />

        <!--注：此service必须在2.2.5版本以后（包括2.2.5版本）加入-->
        <service
            android:name="com.xiaomi.mipush.sdk.MessageHandleService"
            android:enabled="true" />

        <receiver
            android:name="com.xiaomi.push.service.receivers.NetworkStatusReceiver"
            android:exported="true">
            <intent-filter>
                <action android:name="android.net.conn.CONNECTIVITY_CHANGE" />
                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </receiver>

        <receiver
            android:name="com.xiaomi.push.service.receivers.PingReceiver"
            android:exported="false"
            android:process=":pushservice">
            <intent-filter>
                <action android:name="com.xiaomi.push.PING_TIMER" />
            </intent-filter>
        </receiver>
        <receiver  android:exported="true"  android:name="com.beeant.push.MyMiMessageReceiver">
          <!--这里com.xiaomi.mipushdemo.DemoMessageRreceiver改成app中定义的完整类名-->
          <intent-filter>
            <action android:name="com.xiaomi.mipush.RECEIVE_MESSAGE" />
          </intent-filter>
            <intent-filter>
            <action android:name="com.xiaomi.mipush.MESSAGE_ARRIVED" />
          </intent-filter>
          <intent-filter>
            <action android:name="com.xiaomi.mipush.ERROR" />
          </intent-filter>
        </receiver>
      <!-- 小米推送 end -->


      <!-- oppo 推送 start -->
         <service
            android:name="com.beeant.push.MyOppoPushMessageService"

            android:permission="com.coloros.mcs.permission.SEND_MCS_MESSAGE">
            <intent-filter>
                <action android:name="com.coloros.mcs.action.RECEIVE_MCS_MESSAGE"/>
            </intent-filter>
        </service> <!--兼容Q以下版本-->

        <service
            android:name="com.beeant.push.MyOppoDataMessageCallbackService"

            android:permission="com.heytap.mcs.permission.SEND_PUSH_MESSAGE">

            <intent-filter>
                <action android:name="com.heytap.mcs.action.RECEIVE_MCS_MESSAGE"/>

                <action android:name="com.heytap.msp.push.RECEIVE_MCS_MESSAGE"/>
            </intent-filter>
        </service> <!--兼容Q版本-->

      <!-- oppo 推送 end -->

      <!-- vivo 推送 start  -->
      <!--push应用定义消息receiver声明--> 
        <receiver android:name="com.beeant.push.MyViVoPushMessageReceiverImpl" 
          android:exported="false">    
        <intent-filter> 
          <!--接收push消息--> 
          <action android:name="com.vivo.pushclient.action.RECEIVE"/> 
        </intent-filter>
        </receiver>
        <!--Vivo Push需要配置的service、activity--> 
        <service 
          android:name="com.vivo.push.sdk.service.CommandClientService" 
          android:permission="com.push.permission.UPSTAGESERVICE"
          android:exported="true"/>
        <!--Vivo Push开放平台中应用的appid 和api key
        <meta-data 
          android:name="com.vivo.push.api_key" 
          android:value="xxxxxxxx"/> 

        <meta-data 
          android:name="com.vivo.push.app_id" 
          android:value="xxxxxxxx"/>--> 
      <!-- vivo 推送 end  -->

      <!-- <receiver android:name="com.beeant.push.BackgroundActionButtonHandler"/>
      <receiver android:name="com.beeant.push.PushDismissedHandler"/> -->

      <!-- <service android:name="com.beeant.push.FCMService">
        <intent-filter>
          <action android:name="com.google.firebase.MESSAGING_EVENT"/>
        </intent-filter>
      </service>

      <service android:name="com.beeant.push.PushInstanceIDListenerService">
        <intent-filter>
          <action android:name="com.google.firebase.INSTANCE_ID_EVENT"/>
        </intent-filter>
      </service> -->
    </config-file>

    <config-file target="config.xml" parent="/*">
      <!-- <preference name="GradlePluginGoogleServicesEnabled" value="true" />
      <preference name="GradlePluginGoogleServicesVersion" value="4.2.0" /> -->
    </config-file>

    <!-- <preference name="ANDROID_SUPPORT_V13_VERSION" default="28.0.0"/>
    <framework src="com.android.support:support-v13:$ANDROID_SUPPORT_V13_VERSION"/> -->
    <!-- <preference name="FCM_VERSION" default="18.+"/> -->
    <framework src="src/android/libs/hw/hwPushBuild.gradle" custom="true" type="gradleReference"/>
    <framework src="src/android/libs/vivo/vivoBuild.gradle" custom="true" type="gradleReference"/>
    <framework src="src/android/libs/oppo/oppoBuild.gradle" custom="true" type="gradleReference"/>
    <framework src="com.huawei.agconnect:agconnect-core:1.5.2.300"/>
    <framework src="com.huawei.hms:push:5.3.0.304"/>
    <lib-file src="src/android/libs/mi/MiPush_SDK_Client_4_5_0.jar"/>
    <source-file src="src/android/libs/vivo/vivo_pushSDK_v3.0.0.3_483.aar" target-dir='libs'/>
    <source-file src="src/android/libs/oppo/com.heytap.msp.aar" target-dir='libs'/>
    <source-file src='src/android/CDVPluginHmsMessageService.java' target-dir='src/com/beeant/push/'/>
    <source-file src='src/android/PushPlugin.java' target-dir='src/com/beeant/push/'/>
    <source-file src='src/android/MyMiMessageReceiver.java' target-dir='src/com/beeant/push/'/>
    <source-file src='src/android/MyViVoPushMessageReceiverImpl.java' target-dir='src/com/beeant/push/'/>
    <source-file src='src/android/BadgeUtils.java' target-dir='src/com/beeant/push/'/>
    <source-file src='src/android/XiaomiBadgeHelper.java' target-dir='src/com/beeant/push/'/>
    <source-file src='src/android/MyOppoDataMessageCallbackService.java' target-dir='src/com/beeant/push/'/>
    <source-file src='src/android/MyOppoPushMessageService.java' target-dir='src/com/beeant/push/'/>
    <!-- <framework src="me.leolin:ShortcutBadger:1.1.17@aar"/> -->
    <!-- <framework src="com.google.firebase:firebase-messaging:$FCM_VERSION"/> -->

    <!-- <source-file src="src/android/FCMService.java" target-dir="src/com/beeant/push/"/>
    <source-file src="src/android/PushConstants.java" target-dir="src/com/beeant/push/"/>
    <source-file src="src/android/PushHandlerActivity.java" target-dir="src/com/beeant/push/"/>
    <source-file src="src/android/BackgroundHandlerActivity.java" target-dir="src/com/beeant/push/"/>
    <source-file src="src/android/PushInstanceIDListenerService.java" target-dir="src/com/beeant/push/"/>
    <source-file src="src/android/PushPlugin.java" target-dir="src/com/beeant/push/"/>
    <source-file src="src/android/BackgroundActionButtonHandler.java" target-dir="src/com/beeant/push/"/>
    <source-file src="src/android/PushDismissedHandler.java" target-dir="src/com/beeant/push/"/> -->
  </platform>

  <platform name="browser">
    <js-module src="www/browser/push.js" name="BrowserPush">
      <clobbers target="PushNotification"/>
    </js-module>

    <asset src="src/browser/ServiceWorker.js" target="ServiceWorker.js"/>
    <asset src="src/browser/manifest.json" target="manifest.json"/>

    <hook type="after_prepare" src="hooks/browser/updateManifest.js"/>
  </platform>

  <platform name="ios">
    <preference name="IOS_FIREBASE_MESSAGING_VERSION" default="~> 6.32.2"/>

    <config-file target="config.xml" parent="/*">
      <feature name="PushNotification">
        <param name="ios-package" value="PushPlugin"/>
      </feature>
    </config-file>

    <config-file target="*-Info.plist" parent="UIBackgroundModes">
      <array>
        <string>remote-notification</string>
        <string>voip</string>
      </array>
    </config-file>

    <config-file target="*-Debug.plist" parent="aps-environment">
      <string>development</string>
    </config-file>

    <config-file target="*-Release.plist" parent="aps-environment">
      <string>production</string>
    </config-file>

    <source-file src="src/ios/AppDelegate+notification.m"/>
    <source-file src="src/ios/PushPlugin.m"/>
    <header-file src="src/ios/AppDelegate+notification.h"/>
    <header-file src="src/ios/PushPlugin.h"/>

    <framework src="PushKit.framework"/>

    <podspec>
      <config>
        <source url="https://cdn.cocoapods.org/"/>
      </config>
      <pods use-frameworks="true">
        <pod name="Firebase/Messaging" spec="$IOS_FIREBASE_MESSAGING_VERSION" />
      </pods>
    </podspec>
  </platform>

  <platform name="windows">
    <hook type="after_plugin_install" src="hooks/windows/setToastCapable.js"/>

    <js-module src="src/windows/PushPluginProxy.js" name="PushPlugin">
      <runs/>
    </js-module>

    <config-file target="config.xml" parent="/*">
      <preference name="WindowsToastCapable" value="true"/>
    </config-file>
  </platform>
</plugin>
